name: Shell Script Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  posix-compliance:
    name: POSIX Compliance Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install shellcheck and dash
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck dash

      - name: Run shellcheck on all shell scripts
        run: |
          find . -name "*.sh" -type f -exec shellcheck -x -s sh -f gcc -e SC1090 {} +

      - name: Test POSIX compliance with dash
        run: |
          for script in $(find . -name "*.sh" -type f); do
            echo "Testing POSIX compliance of $script with dash"
            dash -n "$script" || exit 1
          done

  macos-testing:
    name: macOS Compatibility Test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Test utils.sh functions
        run: |
          chmod +x shell/lib/utils.sh
          . shell/lib/utils.sh
          log info "Testing macOS compatibility"
          log success "macOS test successful"

      - name: Test maintenance script
        run: |
          chmod +x shell/maintenance/maintenance.sh
          cd shell/maintenance
          export DEBUG=true
          ./maintenance.sh || true

      - name: Verify file operations
        run: |
          mkdir -p test_dir
          echo "test content" > test_file
          ln -sf "$(pwd)/test_file" test_dir/test_link
          [ -L test_dir/test_link ] && echo "Symlink test passed"
          rm -rf test_dir test_file

  debian-testing:
    name: Debian Compatibility Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dash
        run: |
          sudo apt-get update
          sudo apt-get install -y dash

      - name: Test utils.sh functions
        run: |
          chmod +x shell/lib/utils.sh
          . shell/lib/utils.sh
          log info "Testing Debian compatibility"
          log success "Debian test successful"

      - name: Test maintenance script
        run: |
          chmod +x shell/maintenance/maintenance.sh
          cd shell/maintenance
          export DEBUG=true
          ./maintenance.sh || true

  functionality-tests:
    name: Functionality Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Test utility functions
        run: |
          . shell/lib/utils.sh
          log info "Testing info log"
          log success "Testing success log"
          log warning "Testing warning log"
          log debug "Testing debug log"

          export DEBUG=false
          parse_args --debug
          [ "$DEBUG" = "true" ] && echo "Argument parsing test passed"

          if command -v ensure_directory >/dev/null 2>&1; then
            test_dir="/tmp/test_ensure_dir"
            ensure_directory "$test_dir"
            [ -d "$test_dir" ] && echo "ensure_directory test passed" && rm -rf "$test_dir"
          fi

      - name: Cross-platform compatibility checks
        run: |
          date "+%Y-%m-%d %H:%M:%S"
          find . -name "*.sh" -type f | head -5
          echo "test string" | sed 's/test/TEST/'

      - name: Verify required functions
        run: |
          . shell/lib/utils.sh
          for func in log parse_args; do
            if ! command -v "$func" >/dev/null 2>&1; then
              echo "Function $func not found" >&2
              exit 1
            fi
            echo "Function $func is defined"
          done

      - name: Performance and resource tests
        run: |
          time_start=$(date +%s)
          cd shell/maintenance
          export DEBUG=true
          timeout 30s ./maintenance.sh 2>/dev/null || echo "Maintenance script test completed"
          time_end=$(date +%s)
          echo "Execution took $((time_end - time_start)) seconds"

